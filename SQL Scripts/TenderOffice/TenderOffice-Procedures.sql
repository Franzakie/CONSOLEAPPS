CREATE OR REPLACE PROCEDURE OTCS.AMSA_RFQ_600_R
                   (cv_1                OUT SYS_REFCURSOR)
AS
BEGIN
	OPEN cv_1 FOR
	SELECT ID, RFQNO, RFQ_GROUPNO, OURREF, DESCRIPTION, 
		CLOSINGDATE, VENDORNO, VENDORNAME, BUYERNO, BUYERNAME, 
		LOCATIONNO, "LOCATION", UPDATEDINSAP
	FROM AMSA_RFQ
	WHERE RFQNO = (SELECT MAX(RFQNO) FROM AMSA_RFQ 
                 WHERE RFQNO < '6010000000');
END;
/

CREATE OR REPLACE PROCEDURE OTCS.AMSA_RFQ_601_R
                   (cv_1                OUT SYS_REFCURSOR)
AS
BEGIN
	OPEN cv_1 FOR
	SELECT ID, RFQNO, RFQ_GROUPNO, OURREF, DESCRIPTION, 
		CLOSINGDATE, VENDORNO, VENDORNAME, BUYERNO, BUYERNAME, 
		LOCATIONNO, "LOCATION", UPDATEDINSAP
	FROM AMSA_RFQ
	WHERE RFQNO = (SELECT MAX(RFQNO) FROM AMSA_RFQ 
                 WHERE RFQNO < '6210000000');
END;
/

CREATE OR REPLACE PROCEDURE OTCS.AMSA_RFQ_I_Only
                   (v_ID				IN number
				   ,v_RFQNO		        IN NVARCHAR2
                   ,v_RFQ_GROUPNO       IN NVARCHAR2
				   ,v_OURREF       		IN NVARCHAR2
                   ,v_DESCRIPTION       IN NVARCHAR2
                   ,v_CLOSINGDATE       IN NVARCHAR2
                   ,v_VENDORNO          IN NVARCHAR2
                   ,v_VENDORNAME        IN NVARCHAR2
                   ,v_BUYERNO           IN NVARCHAR2
                   ,v_BUYERNAME         IN NVARCHAR2
                   ,v_LOCATIONNO        IN NVARCHAR2
                   ,v_LOCATION          IN NVARCHAR2
				   ,v_UPDATEDINSAP		IN NVARCHAR2
				   ,v_MATERIALNO		IN NVARCHAR2
				   ,v_RETFAXNO			IN NVARCHAR2
				   ,v_BUYERMAIL			IN NVARCHAR2)
AS
TmpNewId Number;
TmpCount Number;
BEGIN
  SELECT Count(*) INTO TmpCount FROM AMSA_RFQ WHERE RFQNO = v_RFQNO;
  IF TmpCount = 0 THEN
    BEGIN
      SELECT AMSA_RFQ_SEC.NEXTVAL
      INTO TmpNewId
      FROM Dual;
      INSERT INTO AMSA_RFQ (ID, RFQNO, RFQ_GROUPNO, OURREF, DESCRIPTION, CLOSINGDATE, VENDORNO, VENDORNAME, BUYERNO, BUYERNAME, 
          LOCATIONNO, LOCATION, UPDATEDINSAP, MATERIALNO, RETFAXNO, BUYEREMAIL)
      SELECT TmpNewId, v_RFQNO, v_RFQ_GROUPNO, v_OURREF, v_DESCRIPTION, TO_DATE(v_CLOSINGDATE, 'yyyymmdd'), v_VENDORNO, v_VENDORNAME, v_BUYERNO, v_BUYERNAME, 
        v_LOCATIONNO, v_LOCATION, v_UPDATEDINSAP, v_MATERIALNO, v_RETFAXNO, v_BUYERMAIL FROM DUAL;
    END;
  ELSE
    BEGIN
          UPDATE AMSA_RFQ
            SET RFQNO = v_RFQNO, 
              RFQ_GROUPNO = v_RFQ_GROUPNO, 
              OURREF = v_OURREF, 
              DESCRIPTION = v_DESCRIPTION, 
              CLOSINGDATE = TO_DATE(v_CLOSINGDATE, 'yyyymmdd'), 
              VENDORNO = v_VENDORNO, 
              VENDORNAME = v_VENDORNAME, 
              BUYERNO = v_BUYERNO, 
              BUYERNAME = v_BUYERNAME, 
              LOCATIONNO = v_LOCATIONNO, 
              "LOCATION" = v_LOCATION,
              MATERIALNO = v_MATERIALNO,
              RETFAXNO = v_RETFAXNO,
              BUYEREMAIL = v_BUYERMAIL
          WHERE RFQNO = v_RFQNO; 
      END;
  END IF;
  COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE OTCS.AMSA_RFQ_R
                   (cv_1                OUT SYS_REFCURSOR)
AS
BEGIN
	OPEN cv_1 FOR
	SELECT ID, RFQNO, RFQ_GROUPNO, OURREF, DESCRIPTION, 
		CLOSINGDATE, VENDORNO, VENDORNAME, BUYERNO, BUYERNAME, 
		LOCATIONNO, "LOCATION", PRICE, UPDATEDINSAP
	FROM AMSA_RFQ
	WHERE RFQNO = (SELECT MAX(RFQNO) FROM AMSA_RFQ);
END;
/

CREATE OR REPLACE PROCEDURE OTCS.AMSA_RFQ_R_ALL
                   (cv_1                OUT SYS_REFCURSOR)
AS
BEGIN
	OPEN cv_1 FOR
	SELECT ID, RFQNO, RFQ_GROUPNO, OURREF, DESCRIPTION, 
		CLOSINGDATE, VENDORNO, VENDORNAME, BUYERNO, BUYERNAME, 
		LOCATIONNO, "LOCATION", PRICE, UPDATEDINSAP
	FROM AMSA_RFQ
	WHERE UPDATEDINSAP IN (1,2) AND PRICE IS NOT NULL;
END;
/

CREATE OR REPLACE PROCEDURE OTCS.AMSA_RFQ_STATUS_U
AS
BEGIN
    UPDATE AMSA_RFQ SET UPDATEDINSAP = 1 WHERE (CLOSINGDATE + 1) <= sysdate AND UPDATEDINSAP = 3 and scanpc IS NOT NULL;
    Commit;
    UPDATE AMSA_RFQ SET UPDATEDINSAP = 2 WHERE scanpc IS NOT NULL AND ((CLOSINGDATE <= sysdate  AND '1059' < TO_CHAR (SYSDATE, 'HH24MI') AND (OURREF = '11:00' AND UPDATEDINSAP = 3)) or UPDATEDINSAP = 4  or UPDATEDINSAP = 6);
    Commit;
    UPDATE AMSA_RFQ SET UPDATEDINSAP = 2 WHERE scanpc IS NOT NULL AND (CLOSINGDATE <= sysdate  AND '1059' < TO_CHAR (SYSDATE, 'HH24MI') AND (OURREF = '11:00' AND UPDATEDINSAP = 14)) ;
    Commit;
END;
/

CREATE OR REPLACE PROCEDURE OTCS.AMSA_RFQ_U
                   (v_ID				IN number
				   ,v_RFQNO		        IN NVARCHAR2
                   ,v_RFQ_GROUPNO       IN NVARCHAR2
				   ,v_OURREF       		IN NVARCHAR2
                   ,v_DESCRIPTION       IN NVARCHAR2
                   ,v_CLOSINGDATE       IN NVARCHAR2
                   ,v_VENDORNO          IN NVARCHAR2
                   ,v_VENDORNAME        IN NVARCHAR2
                   ,v_BUYERNO           IN NVARCHAR2
                   ,v_BUYERNAME         IN NVARCHAR2
                   ,v_LOCATIONNO        IN NVARCHAR2
                   ,v_LOCATION          IN NVARCHAR2
				   ,v_UPDATEDINSAP		IN NVARCHAR2
				   ,v_MATERIALNO		IN NVARCHAR2
				   ,v_RETFAXNO			IN NVARCHAR2
				   ,v_BUYERMAIL			IN NVARCHAR2)
AS
TmpNewId Number;
TmpCount Number;
BEGIN
  SELECT Count(*) INTO TmpCount FROM AMSA_RFQ WHERE RFQNO = v_RFQNO;
  IF TmpCount = 0 THEN
    BEGIN
      SELECT AMSA_RFQ_SEC.NEXTVAL
      INTO TmpNewId
      FROM Dual;
      INSERT INTO AMSA_RFQ (ID, RFQNO, RFQ_GROUPNO, OURREF, DESCRIPTION, CLOSINGDATE, VENDORNO, VENDORNAME, BUYERNO, BUYERNAME, 
          LOCATIONNO, LOCATION, UPDATEDINSAP, MATERIALNO, RETFAXNO, BUYEREMAIL)
      SELECT TmpNewId, v_RFQNO, v_RFQ_GROUPNO, v_OURREF, v_DESCRIPTION, TO_DATE(v_CLOSINGDATE, 'yyyymmdd'), v_VENDORNO, v_VENDORNAME, v_BUYERNO, v_BUYERNAME, 
        v_LOCATIONNO, v_LOCATION, v_UPDATEDINSAP, v_MATERIALNO, v_RETFAXNO, v_BUYERMAIL FROM DUAL;
    END;
  ELSE
    BEGIN
      IF ((v_VENDORNO = '') OR (v_VENDORNO  IS NULL)) THEN
          UPDATE AMSA_RFQ
            SET INITIALDATE = CLOSINGDATE,
                OURREF = v_OURREF
          WHERE RFQNO = v_RFQNO; 
          UPDATE AMSA_RFQ
            SET CLOSINGDATE = TO_DATE(v_CLOSINGDATE, 'yyyymmdd') 
          WHERE RFQNO = v_RFQNO; 
      ELSE
          UPDATE AMSA_RFQ
            SET RFQNO = v_RFQNO, 
              RFQ_GROUPNO = v_RFQ_GROUPNO, 
              OURREF = v_OURREF, 
              DESCRIPTION = v_DESCRIPTION, 
              CLOSINGDATE = TO_DATE(v_CLOSINGDATE, 'yyyymmdd'), 
              VENDORNO = v_VENDORNO, 
              VENDORNAME = v_VENDORNAME, 
              BUYERNO = v_BUYERNO, 
              BUYERNAME = v_BUYERNAME, 
              LOCATIONNO = v_LOCATIONNO, 
              "LOCATION" = v_LOCATION,
              UPDATEDINSAP = v_UPDATEDINSAP
          WHERE RFQNO = v_RFQNO; 
      END IF;
      IF ((v_UPDATEDINSAP <> '0') AND (v_UPDATEDINSAP  IS NOT NULL)) THEN
          UPDATE AMSA_RFQ
            SET UPDATEDINSAP = v_UPDATEDINSAP 
          WHERE RFQNO = v_RFQNO; 
      END IF;
    END;
  END IF;
  COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE OTCS.p_saplink_get (p_class    IN  AMSA_SAPLINK.CLASSNAME%TYPE,   
                     p_recordset OUT SYS_REFCURSOR)



AS

  t_docid           VARCHAR2(255);
  t_docdate date;


BEGIN


OPEN p_recordset FOR
    SELECT  REC_ID
        ,VER_ID
        ,VER_DATE
        ,DOCNAME
        ,DATAID
        ,MIMETYPE
        ,DOCID
        ,ARCHID
        ,CLASSNAME
        ,OBJECT_ID
        ,STATUS_F
        ,DESCRIPTION
        ,ACTION
        ,FIELD_NAME
        ,INFO_TYPE
        ,SUB_INFO_TYPE
        ,SAP_OBJTYPE
        ,SAP_DOCTYPE
    FROM AMSA_SAPLINK
    WHERE CLASSNAME = p_class 
    AND STATUS_F = 'N' ;

END p_saplink_get;
/

CREATE OR REPLACE PROCEDURE OTCS.P_SAPLINK_RFQ_PREP (p_recordset OUT SYS_REFCURSOR) AS 
  t_docid VARCHAR2(255);
  t_docdate date;
BEGIN

OPEN p_recordset FOR
  SELECT REC_ID
        ,VER_ID
        ,VER_DATE
        ,DOCNAME
        ,DATAID
        ,MIMETYPE
        ,DOCID
        ,ARCHID
        ,CLASSNAME
        ,OBJECT_ID
        ,STATUS_F
        ,DESCRIPTION
        ,ACTION
        ,FIELD_NAME
        ,INFO_TYPE
        ,SUB_INFO_TYPE
        ,SAP_OBJTYPE
        ,SAP_DOCTYPE
    FROM AMSA_SAPLINK
    WHERE CLASSNAME = 'RFQS' 
    AND STATUS_F = 'N' ;
END P_SAPLINK_RFQ_PREP;
/

CREATE OR REPLACE PROCEDURE OTCS.FranzUpdateRFQ
IS
  v_ID              NUMBER(19,0);
  myCount           NUMBER(19,0);
  Str_AttribNo      NVARCHAR2(10);
  Str_Value1        NVARCHAR2(50);
  Tmp_RFQNO      varchar2(50);  
BEGIN
   FOR C1 IN 
   (  
    SELECT RFQNO FROM AMSA_RFQ WHERE UPDATEDINSAP IN (1,2,3,4) AND PRICE IS NULL  and scandate > sysdate - 7
   )
   LOOP
   BEGIN
      Tmp_RFQNO := c1.RFQNO;
      Str_Value1 := '';
      v_ID := 0;
      SELECT COUNT(*) INTO myCount FROM DTREECORE WHERE SUBTYPE = 144 AND NAME = (SELECT CONCAT(CONCAT(CONCAT(CONCAT(RFQ_GROUPNO, '-'), RFQNO), '-'), VENDORNAME) FROM AMSA_RFQ WHERE RFQNO = Tmp_RFQNO) AND ((OWNERID=-2000) OR (OWNERID=-2078));
      IF myCount > 0 THEN
        BEGIN
          SELECT MAX(DATAID) INTO v_ID FROM DTREECORE WHERE SUBTYPE = 144 AND  NAME = (SELECT CONCAT(CONCAT(CONCAT(CONCAT(RFQ_GROUPNO, '-'), RFQNO), '-'), VENDORNAME) FROM AMSA_RFQ WHERE RFQNO = Tmp_RFQNO)  AND ((OWNERID=-2000) OR (OWNERID=-2078));
          IF v_ID > 0 THEN
            Str_AttribNo := '0';
            SELECT substr(ci.REGIONNAME, (INSTRC(ci.REGIONNAME,'_',1,2)+1)) INTO Str_AttribNo FROM CATREGIONMAP ci
            WHERE ci.CATNAME = 'RFQ Responses' AND ci.AttrName = 'RFQ Amount';
            IF TO_NUMBER(Str_AttribNo) > 0 THEN
              SELECT VALSTR INTO Str_Value1 FROM LLATTRDATA WHERE ID = v_ID AND ATTRID = TO_NUMBER(Str_AttribNo)
              AND VERNUM = (SELECT MAX(VERNUM) FROM LLATTRDATA WHERE ID = v_ID );
            END IF;
          END IF;
          UPDATE AMSA_RFQ SET PRICE = Str_Value1 WHERE RFQNO = Tmp_RFQNO; 
          COMMIT;
        END;
      END IF;
   END;
   END LOOP;
END;
/

CREATE OR REPLACE PROCEDURE OTCS.CleanupRFQ
IS
BEGIN
    UPDATE AMSA_RFQ SET UPDATEDINSAP = 80 WHERE RFQNO IN (SELECT RFQNO FROM AMSA_RFQ WHERE UPDATEDINSAP IN (1,2) AND PRICE IS NULL  and ClosingDate > sysdate - 90);
    UPDATE AMSA_SAPLINK SET STATUS_F = 'E' WHERE CLASSNAME = 'RFQS' AND  STATUS_F = 'N' AND OBJECT_ID IN (SELECT RFQNO FROM AMSA_RFQ WHERE UPDATEDINSAP IN (1,2) AND PRICE IS NULL  and ClosingDate > sysdate - 90);
    COMMIT;
END;
/

